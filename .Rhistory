getwd()
install.packages("fs")
library(fs)
make_project_dir <- function(){
dir_names <- c(
"00_Data",
"00_Scripts",
"01_Business_Understanding",
"02_Data_Undersatnding",
"03_Data_Preparation",
"04_Modeling",
"05_Evaluation")
dir_create(dir_names)
dir_ls()
}
make_project_dir()
make_project_dir <- function(){
dir_names <- c(
"00_Data",
"00_Scripts",
"01_Business_Understanding",
"02_Data_Understanding",
"03_Data_Preparation",
"04_Modeling",
"05_Evaluation",
"06_Deployment")
dir_create(dir_names)
dir_ls()
}
make_project_dir()
make_project_dir()
pkgs <- C(
"h2o",        # High performance machine learning
"lime",       # Explaining black-box models
"recipes",    # Creating ML preprocessing recipes
"tidyverse",  # Set of pkgs for data science: dplyr, ggplot2, purrr, tidyr, ...
"tidyquant",  # Financial time series pkg - Used for theme_tq ggplot2 theme
"glue",       # Pasting text
"cowplot",    # Handling multiple ggplots
"GGally",     # Data understanding - visualizations
"skimr",      # Data understanding - summary information
"fs",         # Working with the file system - directory structure
"readxl",     # Reading excel files
"writexl"     # Writing to excel files
)
g
pkgs <- C(
"h2o",        # High performance machine learning
"lime",       # Explaining black-box models
"recipes",    # Creating ML preprocessing recipes
"tidyverse",  # Set of pkgs for data science: dplyr, ggplot2, purrr, tidyr, ...
"tidyquant",  # Financial time series pkg - Used for theme_tq ggplot2 theme
"glue",       # Pasting text
"cowplot",    # Handling multiple ggplots
"GGally",     # Data understanding - visualizations
"skimr",      # Data understanding - summary information
"fs",         # Working with the file system - directory structure
"readxl",     # Reading excel files
"writexl"     # Writing to excel files
)
pkgs <- C(
"h2o",        # High performance machine learning
"lime",       # Explaining black-box models
"recipes",    # Creating ML preprocessing recipes
"tidyverse",  # Set of pkgs for data science: dplyr, ggplot2, purrr, tidyr, ...
"tidyquant",  # Financial time series pkg - Used for theme_tq ggplot2 theme
"glue",       # Pasting text
"cowplot",    # Handling multiple ggplots
"GGally",     # Data understanding - visualizations
"skimr",      # Data understanding - summary information
"fs",         # Working with the file system - directory structure
"readxl",     # Reading excel files
"writexl"     # Writing to excel files
)
pkgs <- C(
"h2o",        # High performance machine learning
"lime",       # Explaining black-box models
"recipes",    # Creating ML preprocessing recipes
"tidyverse",  # Set of pkgs for data science: dplyr, ggplot2, purrr, tidyr, ...
"tidyquant",  # Financial time series pkg - Used for theme_tq ggplot2 theme
"glue",       # Pasting text
"cowplot",    # Handling multiple ggplots
"GGally",     # Data understanding - visualizations
"skimr",      # Data understanding - summary information
"fs",         # Working with the file system - directory structure
"readxl",     # Reading excel files
"writexl"     # Writing to excel files
)
pkgs <- C(
"h2o",        # High performance machine learning
"lime")
pkgs <- c(
"h2o",        # High performance machine learning
"lime",       # Explaining black-box models
"recipes",    # Creating ML preprocessing recipes
"tidyverse",  # Set of pkgs for data science: dplyr, ggplot2, purrr, tidyr, ...
"tidyquant",  # Financial time series pkg - Used for theme_tq ggplot2 theme
"glue",       # Pasting text
"cowplot",    # Handling multiple ggplots
"GGally",     # Data understanding - visualizations
"skimr",      # Data understanding - summary information
"fs",         # Working with the file system - directory structure
"readxl",     # Reading excel files
"writexl"     # Writing to excel files
)
pkgs <- c(
"h2o",        # High performance machine learning
"lime",       # Explaining black-box models
"recipes",    # Creating ML preprocessing recipes
"tidyverse",  # Set of pkgs for data science: dplyr, ggplot2, purrr, tidyr, ...
"tidyquant",  # Financial time series pkg - Used for theme_tq ggplot2 theme
"glue",       # Pasting text
"cowplot",    # Handling multiple ggplots
"GGally",     # Data understanding - visualizations
"skimr",      # Data understanding - summary information
"fs",         # Working with the file system - directory structure
"readxl",     # Reading excel files
"writexl"     # Writing to excel files
)
pkgs <- c(
"h2o",        # High performance machine learning
"lime",       # Explaining black-box models
"recipes",    # Creating ML preprocessing recipes
"tidyverse",  # Set of pkgs for data science: dplyr, ggplot2, purrr, tidyr, ...
"tidyquant",  # Financial time series pkg - Used for theme_tq ggplot2 theme
"glue",       # Pasting text
"cowplot",    # Handling multiple ggplots
"GGally",     # Data understanding - visualizations
"skimr",      # Data understanding - summary information
"fs",         # Working with the file system - directory structure
"readxl",     # Reading excel files
"writexl"     # Writing to excel files
)
install.packages(pkgs)
install.packages(pkgs)
# Libraries
library(tidyverse)
library(tidyquant)
library(readxl)
library(forcats)
library(stringr)
getwd()
path_train <- "../00_Data/telco_train.xlsx"
train_raw_tbl <- read_excel(path_train, sheet = 1)
path_train <- "/00_Data/telco_train.xlsx"
train_raw_tbl <- read_excel(path_train, sheet = 1)
path_train <- "00_Data/telco_train.xlsx"
train_raw_tbl <- read_excel(path_train, sheet = 1)
# Data subtest
train_raw_tbl %>%
select(EmployeeNumber, Department, JobRole, PerformanceRating, Attrition)
# Data subest
dept_job_role_tbl <- train_raw_tbl %>%
select(EmployeeNumber,
Department,
JobRole,
PerformanceRating,
Attrition)
dept_job_role_tbl
dept_job_role_tbl %>%
group_by(Attrition)
dept_job_role_tbl %>%
group_by(Attrition) %>%
summarise(n = n())
dept_job_role_tbl %>%
group_by(Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(pct = n/sum(n))
dept_job_role_tbl
dept_job_role_tbl %>%
group_by(Department, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(pct = n/sum(n))
dept_job_role_tbl %>%
group_by(Department, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department) %>%
mutate(pct = n/sum(n))
dept_job_role_tbl %>%
group_by(JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(JobRole) %>%
mutate(pct = n/sum(n))
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n))
# Job Role ----
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% "Yes")
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n))
# Job Role ----
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% "Yes")
# Job Role ----
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes"))
train_raw_tbl
glimpse(train_raw_tbl)
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct))
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct)) %>%
mutate(above_industry_avg = case_when(
pct > 0.088 ~ "Yes",
TRUE ~ "No"
))
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct)) %>%
mutate(above_industry_avg = case_when(
pct > 0.088 ~ "Yes",
TRUE ~ "No")
)
calculate_attrition_cost <- function(
# Employee
n                    = 1,
salary               = 80000,
# Direct Costs
separation_cost      = 500,
vacancy_cost         = 10000,
acquisition_cost     = 4900,
placement_cost       = 3500,
# Productivity Costs
net_revenue_per_employee = 250000,
workdays_per_year        = 240,
workdays_position_open   = 40,
workdays_onboarding      = 60,
onboarding_efficiency    = 0.50
) {
# Direct Costs
direct_cost <- sum(separation_cost, vacancy_cost, acquisition_cost, placement_cost)
# Lost Productivity Costs
productivity_cost <- net_revenue_per_employee / workdays_per_year *
(workdays_position_open + workdays_onboarding * onboarding_efficiency)
# Savings of Salary & Benefits (Cost Reduction)
salary_benefit_reduction <- salary / workdays_per_year * workdays_position_open
# Estimated Turnover Per Employee
cost_per_employee <- direct_cost + productivity_cost - salary_benefit_reduction
# Total Cost of Employee Turnover
total_cost <- n * cost_per_employee
return(total_cost)
}
calculate_attrition_cost()
calculate_attrition_cost(n = 200)
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct)) %>%
mutate(above_industry_avg = case_when(
pct > 0.088 ~ "Yes",
TRUE ~ "No")
)
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct)) %>%
mutate(attrition_costs = calculate_attrition_cost(n = n))
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
mutate(attrition_costs = calculate_attrition_cost(n = n)) %>%
arrange(desc(attrition_costs))
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct)) %>%
mutate(above_industry_avg = case_when(
pct > 0.088 ~ "Yes",
TRUE ~ "No")
) %>%
mutate(attrition_costs = calculate_attrition_cost(n = n)) %>%
arrange(desc(attrition_costs))
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct)) %>%
mutate(above_industry_avg = case_when(
pct > 0.088 ~ "Yes",
TRUE ~ "No")
) %>%
mutate(attrition_costs = calculate_attrition_cost(n = n, salary = 80000)) %>%
arrange(desc(attrition_costs))
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct)) %>%
mutate(above_industry_avg = case_when(
pct > 0.088 ~ "Yes",
TRUE ~ "No")
) %>%
mutate(attrition_costs = calculate_attrition_cost(n = n, salary = 80000))
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct)) %>%
mutate(above_industry_avg = case_when(
pct > 0.088 ~ "Yes",
TRUE ~ "No")
) %>%
mutate(cost_of_attrition = calculate_attrition_cost(n = n, salary = 80000))
dept_job_role_tbl %>%
group_by(Department, JobRole, Attrition) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Department, JobRole) %>%
mutate(pct = n/sum(n)) %>%
ungroup() %>%
filter(Attrition %in% c("Yes")) %>%
arrange(desc(pct)) %>%
mutate(above_industry_avg = case_when(
pct > 0.088 ~ "Yes",
TRUE ~ "No")
) %>%
mutate(cost_of_attrition = calculate_attrition_cost(n = n, salary = 80000))
